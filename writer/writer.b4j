Version=5.51
AppType=JavaFX
NumberOfModules=2
Module1=SearchView
Module2=TextFlow
Build1=Default,b4j.example
NumberOfFiles=9
File1=chunks.txt
File2=lemma.dat
File3=lowerBanner.bjl
File4=main.bjl
File5=SearchView.bjl
File6=sentences_by_grammar.txt
File7=sentences_by_usage.txt
File8=upperBox.bjl
File9=wordlist.txt
NumberOfLibraries=5
Library1=jcore
Library2=jfx
Library3=apachestringutilsb4j
Library4=javaobject
Library5=jreflection
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private TextArea1 As TextArea
	Private simpleWordList As List
	Private lemmaMap As Map
	Private CheckBox1 As CheckBox
	Private MenuBar1 As MenuBar
	Private Pane1 As Pane
	Private ListView1 As ListView
	'Private ListView2 As ListView
	Private ComboBox1 As ComboBox
	Private sentencesMap As Map
	Private SplitPane1 As SplitPane
	Private SearchView1 As SearchView
	Private path As String
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("main") 'Load the layout file.
	MainForm.Show
    init

End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub init
	MainForm.Title="未命名 - "&MainForm.Title
	SplitPane1.LoadLayout("upperBox")
	SplitPane1.LoadLayout("lowerBanner")
	lemmaMap.Initialize
	simpleWordList=File.ReadList(File.DirAssets,"wordlist.txt")
	ComboBox1.Items.Add("句子库_按用途")
	ComboBox1.Items.Add("句子库_按语法")
	ComboBox1.Items.Add("语块库")
	'加载lemma词典
	Dim textReader As TextReader
	textReader.Initialize(File.OpenInput(File.DirAssets,"lemma.dat"))
	Dim line As String
	line=textReader.ReadLine
	Dim su As ApacheSU
	Do While line <> Null
		Dim words As List
		words=su.SplitWithSeparator(line,"   ")
		For i=1 To words.Size-1
			lemmaMap.Put(words.Get(i),words.Get(0))
		Next
		line=textReader.ReadLine
	Loop
	textReader.close
End Sub

Sub TextArea1_TextChanged (Old As String, New As String)

	If New.Length> Old.Length Then 
		If CheckBox1.Checked Then
			New=New.Replace(CRLF," ")
			Old=Old.Replace(CRLF," ")
			Log("New:"&New)
			
			Dim newWord As String
			Dim su As ApacheSU
			Dim input As String
			input=New.Replace(Old,"")

			If input=" " Or input="." Or input="!" Or input="?" Then
					
				Dim wordList As List
				wordList.Initialize
				wordList=su.SplitWithSeparator(New," ")

				newWord=wordList.Get(wordList.Size-1)
				newWord=newWord.Replace(".","")
			    newWord=newWord.Replace("!","")
			    newWord=newWord.Replace("?","")
				
				Log(newWord)
				newWord=newWord.Trim
				newWord=newWord.ToLowerCase
				newWord=lemmatizeWord(newWord)
				
			    Log(newWord)
				If simpleWordList.IndexOf(newWord)=-1 Then					
				    TextArea1.Text=su.Left(TextArea1.Text,TextArea1.Text.Length-1)
				    TextArea1.Text=su.Left(TextArea1.Text,TextArea1.Text.LastIndexOf(" "))
				    TextArea1.SetSelection(TextArea1.Text.Length,TextArea1.Text.Length)
				End If
		    End If
		Log(input)
		End If
	End If
End Sub

Sub TextArea1_MouseClicked (EventData As MouseEvent)
	
End Sub

Sub TextArea1_FocusChanged (HasFocus As Boolean)
	
End Sub

Sub joinText(wordList As List,sep As String) As String
	Dim result As String
	For Each word As String In wordList
		result=result & word & sep
	Next
	Return result
End Sub

Sub lemmatizeWord(word As String) As String
	If lemmaMap.ContainsKey(word) Then
		Dim value As String
	    value=lemmaMap.Get(word)
	    If word<>value Then
	        word=value
		End If
	End If

	Return word
End Sub

Sub ComboBox1_SelectedIndexChanged(Index As Int, Value As Object)
	Log(Index)
	ListView1.Items.Clear
	
	'Dim categoryList As List
	Dim sentencesList As List
	Select Index
		Case 0
			sentencesList=File.ReadList(File.DirAssets,"sentences_by_usage.txt")
		Case 1
			sentencesList=File.ReadList(File.DirAssets,"sentences_by_grammar.txt")
		Case 2
			sentencesList=File.ReadList(File.DirAssets,"chunks.txt")
	End Select
	sentencesMap=sentencesListToMap(sentencesList)
	For Each category As String In sentencesMap.values
		If ListView1.Items.IndexOf(category)=-1 Then
			ListView1.Items.Add(category)
		End If
	Next
	
End Sub

Sub sentencesListToMap(sentences As List) As Map
	Dim map1 As Map
	map1.Initialize
	For Each line As String In sentences
		Dim su As ApacheSU
		Dim category,content As String
		category=su.SplitWithSeparator(line,"	")(1)
		content=su.SplitWithSeparator(line,"	")(0)
		map1.Put(content,category)
	Next
	Return map1
End Sub

Sub getCategory(sentences As List) As List
	Dim categoryList As List
	categoryList.Initialize
	For Each line In sentences
		Dim su As ApacheSU
		Dim category As String
		category=su.SplitWithSeparator(line,"	")(1)
		If categoryList.IndexOf(category)=-1 Then
			categoryList.Add(category)
		End If
	Next

	Return categoryList
End Sub


Sub ListView1_MouseClicked (EventData As MouseEvent)
	If ListView1.SelectedItem<>Null Then
		'ListView2.Items.Clear
		Dim searchviewItems As List
		searchviewItems.Initialize
		For Each key In sentencesMap.Keys
			Dim contentLabel As Label
			contentLabel.Initialize("")
			
			contentLabel.WrapText=True

			If sentencesMap.Get(key)=ListView1.SelectedItem Then
				contentLabel.Text=key
				searchviewItems.Add(key)
				'ListView2.Items.Add(contentLabel)
			End If
			
			'Dim height As Double = MeasureMultilineTextHeight(contentLabel.Font,ListView2.Width,contentLabel.Text)
		Next
		SearchView1.SetItems(searchviewItems)
		SearchView1.showItems
	End If
End Sub

Sub MenuBar1_Action
	Dim mi As MenuItem
	mi=Sender
	Log(mi.Text)
	Dim su As ApacheSU
	
	Select mi.Text
		Case "_新建"
			If TextArea1.Text<>"" Then
				If fx.Msgbox2(MainForm,"新建文件将丢失现有改动，确定继续吗？","","确定","取消","",fx.MSGBOX_CONFIRMATION)=fx.DialogResponse.POSITIVE Then
					Log("positive")
					MainForm.Title="未命名 - "&su.SplitWithSeparator(MainForm.Title," - ")(1)
					TextArea1.Text=""
					path=""
				End If
			Else
				MainForm.Title="未命名 - "&su.SplitWithSeparator(MainForm.Title," - ")(1)
				TextArea1.Text=""
				path=""
			End If
		Case "_保存"
			If path="" Then
			    Dim fc As FileChooser
				fc.Initialize
				fc.SetExtensionFilter("Text",Array As String("*.txt"))
				Dim path As String
				path=fc.ShowSave(MainForm)
				Log(path)
				If path<>"" Then
					Dim filename As String
					If path.Contains("\") Then
						Dim list1 As List
						list1=su.SplitWithSeparator(path,"\")
						filename=list1.Get(list1.Size-1)
					Else
						Dim list1 As List
						list1=su.SplitWithSeparator(path,"/")
						filename=list1.Get(list1.Size-1)
					End If
					MainForm.Title=filename&" - "&su.SplitWithSeparator(MainForm.Title," - ")(1)
					File.WriteString(path,"",TextArea1.Text)
				End If
			Else
				File.WriteString(path,"",TextArea1.Text)
			End If
			
		Case "关于"
			fx.Msgbox(MainForm,"博物馆文章辅助写作工具"&CRLF&CRLF&"2017.11 徐力航","关于")
		Case "_退出"
			ExitApplication
	End Select
End Sub

Sub MeasureMultilineTextHeight (Font As Font, Width As Double, Text As String) As Double
	Dim jo As JavaObject = Me
	Return jo.RunMethod("MeasureMultilineTextHeight", Array(Font, Text, Width))
End Sub

#if Java
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import javafx.scene.text.Font;
import javafx.scene.text.TextBoundsType;
public static double MeasureMultilineTextHeight(Font f, String text, double width) throws Exception {
  Method m = Class.forName("com.sun.javafx.scene.control.skin.Utils").getDeclaredMethod("computeTextHeight",
  Font.class, String.class, double.class, TextBoundsType.class);
  m.setAccessible(true);
  return (Double)m.invoke(null, f, text, width, TextBoundsType.LOGICAL);
  }
#End If